<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HRBordersAndCountriesWebAPI2</name>
    </assembly>
    <members>
        <member name="T:HRCoreCountriesWebAPI2.Controllers.HRBordersController">
            <summary>
            Controller  for HRBorder
            </summary>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Controllers.HRBordersController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,HRCoreBordersServices.ICoreBordersService,HRBordersAndCountriesWebAPI2.Utils.IHRBordersControllersForker)">
            <summary>
            Constructor for DI
            </summary>
            <param name="config">a MS Config</param>
            <param name="borderService">a IBorderService</param>
            <param name="util">a Commonutil</param>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Controllers.HRBordersController.#ctor">
            <summary>
            Private default constructor.
            </summary>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Controllers.HRBordersController.Get(System.String)">
            <summary>
            Method to get a specific HRBorder by its FIPS
            </summary>
            <param name="id">Border id (FIPS)</param>
            <returns>the corresponding HRBorder</returns>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Controllers.HRBordersController.Get(HRCommonModel.PagingParameterInModel,HRCommonModels.HRSortingParamModel)">
            <summary>
            Method to get a list of ordered HRBorders. Server limit page size is 50 items. Beyond this value a http Status 416 : Requested Range Not Satisfiable is returned.
            </summary>
            <param name="pageModel">The PagingInParameter. Can be null (will be set to server Default)</param>
            <param name="orderBy">The ordering param. Retrun a status 400 bad request is underlying services don't know how to order. Can be null. Sample : "FIPS;ASC;ISO2;DESC"</param>
            <returns>The HRBorders corresponding to pageModel parameter. Can throw MemberAccessException if any service is not consistant.</returns>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Controllers.HRBordersController.Post(System.String)">
            <summary>
            No Post implemented.
            </summary>
            <param name="value">-</param>
            <returns></returns>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Controllers.HRBordersController.Put(System.Int32,System.String)">
            <summary>
            No Put implemented.
            </summary>
            <param name="id">-</param>
            <param name="value">-</param>
            <returns></returns>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Controllers.HRBordersController.Delete(System.Int32)">
            <summary>
            No Delete Implemented.
            </summary>
            <param name="id">-</param>
            <returns></returns>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Controllers.HRBordersController.GetDefaultPagingInParameter">
            <summary>
            Set and return the Default PagingParameter for all the class. Does not throw any Exception.
            </summary>
            <returns>The default PagingInParamter</returns>
        </member>
        <member name="T:HRCoreCountriesWebAPI2.Controllers.HRCountriesController">
            <summary>
            HRCountries Controller
            </summary>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Controllers.HRCountriesController.#ctor(HRCoreCountriesServices.ICoreCountriesService,Microsoft.Extensions.Configuration.IConfiguration,HRBordersAndCountriesWebAPI2.Utils.IHRCountriesControllersForker)">
            <summary>
            Construcotr for DI.
            </summary>
            <param name="service">Country service.</param>
            <param name="config">MS Config.</param>
            <param name="forker">Country forker.</param>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Controllers.HRCountriesController.Get(System.String)">
            <summary>
            Get by ID Rest Method based on GetFromID(String id) method
            </summary>
            <param name="id">Get a Country by ID (ALPHA2_3CODE).</param>
            <returns>HRCountry corresponding</returns>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Controllers.HRCountriesController.Get(HRCommonModel.PagingParameterInModel,HRCommonModels.HRSortingParamModel)">
            <summary>
            Get by PagingInParameter based on GetFromPaging method
            </summary>
            <param name="pageModel">If pageModel is null return the first page else the querried one.</param>
            <param name="orderBy">Order by clause. Sample : "ISO2;ASC"</param>
            <returns>The expected PagingParameterOutModel or a null result with the http status code.</returns>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Controllers.HRCountriesController.GetDefaultPagingInParameter">
            <summary>
            Create the default Paging without throwing any Exception.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HRCoreCountriesWebAPI2.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Program.Main(System.String[])">
            <summary>
            1- Create WebHost
            2- Configure settings
            3- Configure Logger
            4- Run WebHost
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:HRCoreCountriesWebAPI2.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:HRCoreCountriesWebAPI2.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
             <summary>
            This method gets called by the runtime. Use this method to add services to the container. 
             </summary>
             <param name="services"></param>
        </member>
        <member name="M:HRCoreCountriesWebAPI2.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline. 
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:HRBordersAndCountriesWebAPI2.Utils.HRBordersControllersForker">
            <summary>
            Border Controller.
            </summary>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.HRBordersControllersForker.#ctor">
            <summary>
            Not Allowed.
            </summary>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.HRBordersControllersForker.#ctor(HRBordersAndCountriesWebAPI2.Utils.IHRCommonForkerUtils)">
            <summary>
            Constructor for DI.
            </summary>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.HRBordersControllersForker.GetFromIDAsync(System.String,HRCoreBordersServices.ICoreBordersService)">
            <summary>
            1- Check input consistance.
            2- Call service async.
            3- Process result of action as a single HRBorder.
            </summary>
            <param name="id">the FIPS value searched.</param>
            <param name="borderService">the Border service.</param>
            <returns>StatusCode, HRBorder result.</returns>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.HRBordersControllersForker.GetFromPagingAsync(HRCommonModel.PagingParameterInModel,HRCommonModels.HRSortingParamModel,HRCoreBordersServices.ICoreBordersService,System.UInt16)">
            <summary>
            1- Check consistency before calling service
                1.1- Service must be supplied
                1.2- If OrderBy is supplied, check that service have the skill to order and that the OrderBy is valid.
                1.3- PageModel.PageSize must be lower than MaxPage
            2- Get the HRBorders from service
                2.1- If result is OK, return code200
                2.2- Else if IndexOutOfRangeException is catch return Status416RequestedRangeNotSatisfiable
                2.3 Else for any other Exception return Status500InternalServerError
            </summary>
            <param name="pageModel">The Paging Model.</param>
            <param name="orderBy">The order by clause. Sample : "ISO2;DESC".</param>
            <param name="borderService">The countries service.</param>
            <param name="maxPageSize">The max PageSize of pagination.</param>
            <returns>(http Status Code, PagingParameterOutModel).</returns>
        </member>
        <member name="T:HRBordersAndCountriesWebAPI2.Utils.HRCommonForkerUtils">
            <summary>
            Utils for Forkers
            </summary>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.HRCommonForkerUtils.CanOrder(HRCommonModels.HRSortingParamModel,HRCommon.Interface.ISortable)">
            <summary>
            Method use to know if all objects used have necessary skills to sort.
            </summary>
            <param name="orderBy">The ORderBy clause</param>
            <param name="service">The ISortable servcice</param>
            <returns></returns>
        </member>
        <member name="T:HRBordersAndCountriesWebAPI2.Utils.HRCountriesControllersForker">
            <summary>
            
            </summary>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.HRCountriesControllersForker.#ctor(HRBordersAndCountriesWebAPI2.Utils.IHRCommonForkerUtils)">
            <summary>
            Constructor for DI.
            </summary>
            <param name="util"></param>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.HRCountriesControllersForker.GetFromIDAsync(System.String,HRCoreCountriesServices.ICoreCountriesService)">
            <summary>
            Get a Country by ID (ALPHA2_3CODE)
            </summary>
            <param name="id">the country ID</param>
            <param name="service">the core countries service</param>
            <returns>the status code (http) and the Country.</returns>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.HRCountriesControllersForker.GetFromPagingAsync(HRCommonModel.PagingParameterInModel,HRCommonModels.HRSortingParamModel,HRCoreCountriesServices.ICoreCountriesService,System.UInt16)">
            <summary>
            1- Process PagingInParameter if not supplied
            2- Get the HRCountry from service
            3- Paginate previous result
            </summary>
            <param name="pageModel">the paging model</param>
            <param name="orderBy">The order by clause</param>
            <param name="service">the Core countries service</param>
            <param name="maxPageSize">the maxPage size allowed for pagination.</param>
            <returns></returns>
        </member>
        <member name="T:HRBordersAndCountriesWebAPI2.Utils.IHRBordersControllersForker">
            <summary>
            Util interface
            </summary>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.IHRBordersControllersForker.GetFromIDAsync(System.String,HRCoreBordersServices.ICoreBordersService)">
            <summary>
            GetFromIDAsync.
            </summary>
            <param name="id">The border ID.</param>
            <param name="borderService">The Border service.</param>
            <returns></returns>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.IHRBordersControllersForker.GetFromPagingAsync(HRCommonModel.PagingParameterInModel,HRCommonModels.HRSortingParamModel,HRCoreBordersServices.ICoreBordersService,System.UInt16)">
            <summary>
            GetFromPagingAsync.
            </summary>
            <param name="pageModel">The PageModel.</param>
            <param name="orderBy">The OrderBy clause.</param>
            <param name="borderService">The Border service.</param>
            <param name="maxPageSize">The MaxPage size allowed.</param>
            <returns></returns>
        </member>
        <member name="T:HRBordersAndCountriesWebAPI2.Utils.IHRCommonForkerUtils">
            <summary>
            Interface on HRCommonForkerUtils use for UT
            </summary>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.IHRCommonForkerUtils.CanOrder(HRCommonModels.HRSortingParamModel,HRCommon.Interface.ISortable)">
            <summary>
            Method use to determine if the orderBy clause with the Sortable Service can order properly.
            </summary>
            <param name="orderBy">a OrderBy Clause. Can be null.</param>
            <param name="service">a Service orderable. Can be null.</param>
            <returns></returns>
        </member>
        <member name="T:HRBordersAndCountriesWebAPI2.Utils.IHRCountriesControllersForker">
            <summary>
            HRCountriesControllersForker interface.
            </summary>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.IHRCountriesControllersForker.GetFromIDAsync(System.String,HRCoreCountriesServices.ICoreCountriesService)">
            <summary>
            GetFromIDAsync.
            </summary>
            <param name="id">a Country ID.</param>
            <param name="service">a Country service.</param>
            <returns></returns>
        </member>
        <member name="M:HRBordersAndCountriesWebAPI2.Utils.IHRCountriesControllersForker.GetFromPagingAsync(HRCommonModel.PagingParameterInModel,HRCommonModels.HRSortingParamModel,HRCoreCountriesServices.ICoreCountriesService,System.UInt16)">
            <summary>
            GetFromPagingAsync.
            </summary>
            <param name="pageModel">The PageModel.</param>
            <param name="orderBy">The orderBy clause.</param>
            <param name="service">The orderable Service.</param>
            <param name="maxPageSize">The Max page size allowed.</param>
            <returns></returns>
        </member>
    </members>
</doc>
